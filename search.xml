<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo-theme-matery主题设置</title>
      <link href="/2021/07/27/hexo-theme-matery-zhu-ti-she-zhi/"/>
      <url>/2021/07/27/hexo-theme-matery-zhu-ti-she-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a>hexo-theme-matery</h1><p><a href="http://hits.dwyl.io/blinkfox/hexo-theme-matery"><img src="http://hits.dwyl.io/blinkfox/hexo-theme-matery.svg" alt="HitCount"></a> <a href="https://gitter.im/hexo-theme-matery/Lobby?utm_source=badge"><img src="https://img.shields.io/gitter/room/blinkfox/hexo-theme-matery.svg" alt="Gitter"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/issues"><img src="https://img.shields.io/github/issues/blinkfox/hexo-theme-matery.svg" alt="GitHub issues"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/LICENSE"><img src="https://img.shields.io/github/license/blinkfox/hexo-theme-matery.svg" alt="GitHub license"></a> <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master"><img src="https://img.shields.io/badge/downloads-master-green.svg" alt="Download"></a> <a href="http://hexo.io/"><img src="https://img.shields.io/badge/hexo-%3E%3D%205.0.0-blue.svg" alt="Hexo Version"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/network"><img src="https://img.shields.io/github/forks/blinkfox/hexo-theme-matery.svg" alt="GitHub forks"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/stargazers"><img src="https://img.shields.io/github/stars/blinkfox/hexo-theme-matery.svg" alt="GitHub stars"></a></p><p><a href="README.md">🇺🇸English Document</a> | <a href="http://blinkfox.com/">国内访问示例 (http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github 部署演示示例 (https://blinkfox.github.io)</a> | QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=5zMDYHT"><code>926552981</code></a> | QQ 交流群2（推荐）: <a href="https://jq.qq.com/?_wv=1027&amp;k=53q2Ayp"><code>971887688</code></a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token number">404</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/404/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式  </li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Music        <span class="token key atrule">url</span><span class="token punctuation">:</span> /music        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读次数.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;% if (theme.socialLink.github) { %&gt;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= theme.socialLink.github %&gt;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 是否在首页显示音乐</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>         <span class="token comment"># 非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease     <span class="token comment"># require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment"># require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">6879270518</span>     <span class="token comment"># require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>   <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 列表默认折叠</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector">.bg-color</span> <span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4cbf30 0%<span class="token punctuation">,</span> #0f9d58 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本变更记录"><a href="#版本变更记录" class="headerlink" title="版本变更记录"></a>版本变更记录</h2><p>参见 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/README.md">CHANGELOG.md</a></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五种状态码</title>
      <link href="/2021/07/25/wu-chong-zhuang-tai-ma/"/>
      <url>/2021/07/25/wu-chong-zhuang-tai-ma/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h2><h3 id="一、100-状态码"><a href="#一、100-状态码" class="headerlink" title="一、100 状态码"></a>一、100 状态码</h3><p>101 - 网页本身的错误<br>104 - 未知错误 - 应该是这种吧!curl:OpenSSL SSL_read: 连接被对方重设, errno 104 应该可以理解成链接过期了吧! 为了防止DDoS攻击,很多下载链接都带有时效了!变成临时链接</p><h3 id="二、200-状态码：成功-2××：成功处理了请求的状态码"><a href="#二、200-状态码：成功-2××：成功处理了请求的状态码" class="headerlink" title="二、200 状态码：成功 2××：成功处理了请求的状态码"></a>二、200 状态码：成功 2××：成功处理了请求的状态码</h3><p>200 - 服务器成功返回网页<br>204 - 服务器成功处理了请求，但没有返回任何内容</p><h3 id="三、300-状态码：重定向3××：每次请求中使用重定向不要超过-5-次"><a href="#三、300-状态码：重定向3××：每次请求中使用重定向不要超过-5-次" class="headerlink" title="三、300 状态码：重定向3××：每次请求中使用重定向不要超过 5 次"></a>三、300 状态码：重定向3××：每次请求中使用重定向不要超过 5 次</h3><p>301 - 请求的网页已永久移动到新位置。当URLs发生变化时，使用301代码。搜索引擎索引中保存新的URL<br>302 - 请求的网页临时移动到新位置。搜索引擎索引中保存原来的URL<br>304 - 客户端已经执行了GET，但文件变化 - 如果网页自请求者上次请求后没有更新，则用304代码告诉搜索引擎机器人，可节省带宽和开销</p><h3 id="四、400-状态码：客户端错误4××-：表示请求可能出错，妨碍了服务器的处理"><a href="#四、400-状态码：客户端错误4××-：表示请求可能出错，妨碍了服务器的处理" class="headerlink" title="四、400 状态码：客户端错误4×× ：表示请求可能出错，妨碍了服务器的处理"></a>四、400 状态码：客户端错误4×× ：表示请求可能出错，妨碍了服务器的处理</h3><p>400 - 服务器不理解请求的语法<br>403 - 服务器拒绝请求<br>404 - 请求的网页不存在 - 服务器找不到请求的网页。服务器上不存在的网页经常会返回此代码<br>410 - 请求的资源永久删除后，服务器返回此响应。该代码与404（未找到）代码相似，但在资源以前存在而现在不存在的情况下，有时用来替代404 页面代码。如果资源已永久删除，应当使用 301 指定资源的新位置</p><h3 id="五、500-状态码：服务器错误5××-：表示服务器在处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。"><a href="#五、500-状态码：服务器错误5××-：表示服务器在处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。" class="headerlink" title="五、500 状态码：服务器错误5×× ：表示服务器在处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。"></a>五、500 状态码：服务器错误5×× ：表示服务器在处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。</h3><p>500 - 服务器遇到错误，无法完成请求<br>502 - 错误网关；无效网关；在互联网中表示一种网络错误。表现在WEB浏览器中给出的页面反馈<br>503 - 服务器超时 - 服务器目前无法使用（由于超载或停机维护）</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github</title>
      <link href="/2021/07/25/github/"/>
      <url>/2021/07/25/github/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2021/07/25/git/"/>
      <url>/2021/07/25/git/</url>
      
        <content type="html"><![CDATA[<h2 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h2><h3 id="一-安装git"><a href="#一-安装git" class="headerlink" title="一.安装git"></a>一.安装git</h3><h4 id="Linux上安装："><a href="#Linux上安装：" class="headerlink" title="Linux上安装："></a>Linux上安装：</h4><p>命令：yum install git<br>验证安装是否成功命令:git –version</p><h4 id="Windows上安装："><a href="#Windows上安装：" class="headerlink" title="Windows上安装："></a>Windows上安装：</h4><p><a href="https://git-scm.com/">Git</a>官网直接下载安装程序，然后默认安装即可<br>安装完之后桌面右击会出现两个图标分别是：Git GUIhere 和 Git Bash Here<br>一般习惯性用git bash here<br>最后一步设置标识，输入如下命令：<br>git config –global user.name “你的名字”<br>git config –global user.email “你的邮箱”</p><h3 id="二-git流程"><a href="#二-git流程" class="headerlink" title="二.git流程"></a>二.git流程</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">Remote---pull-------------------------------------------------&gt;workspaceRemote---fetch/clone---&gt;Repository---checkout-----------------&gt;workspaceRemote&lt;--push-----------Repository&lt;---commit---index&lt;---add&lt;---workspace* workspace:工作区* index/stage:暂存区* repository：本地仓库* remote；远程仓库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>import os</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytljava</title>
      <link href="/2021/07/25/ytljava/"/>
      <url>/2021/07/25/ytljava/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><h3 id="—JAVA格式—"><a href="#—JAVA格式—" class="headerlink" title="—JAVA格式—"></a>—JAVA格式—</h3><p>public class HelloWorld {<br>    public static void main(String[] args){<br>        System.out.println(“HelloWorld”);<br>    }<br>}</p><h3 id="IDEA安装地址："><a href="#IDEA安装地址：" class="headerlink" title="IDEA安装地址："></a>IDEA安装地址：</h3><p><a href="https://www.jetbrains.com/idea/">https://www.jetbrains.com/idea/</a></p><h3 id="IDEA项目结构："><a href="#IDEA项目结构：" class="headerlink" title="IDEA项目结构："></a>IDEA项目结构：</h3><p>1 创建一个空项目(javaSE_Code)<br>2 创建一个新模块(ide_test)<br>3 在idea_test模块下的src下创建一个包(com.itheima)<br>4 在com.itheima包下新建一个类(HelloWorld)<br>5 在HelloWorld类中编写代码<br>6 在idea中执行程序</p><h3 id="IDEA中内容辅助键和快捷键"><a href="#IDEA中内容辅助键和快捷键" class="headerlink" title="IDEA中内容辅助键和快捷键"></a>IDEA中内容辅助键和快捷键</h3><p>1 快速生成语句<br>    psvm：快速生成main(方法)<br>    sout：快速生成输出语句<br>2 内容辅助快捷键<br>    Ctrl+Alt+space: 内容提示，代码补全<br>3 快捷键<br>    注释：<br>        Ctrl+/: 选中代码单行注释<br>        Ctrl+Shift+/：选中多行代码注释</p><h3 id="IDEA中模块操作分类"><a href="#IDEA中模块操作分类" class="headerlink" title="IDEA中模块操作分类"></a>IDEA中模块操作分类</h3><p>1 新建模块<br>    “File”<del>“Project Structure”</del>“Modules”<del>“+”</del>“New Module”<del>“java”</del>“JDK自己选”<del>“Next”</del>“修改模块名”<del>“Finish”</del>“OK”<br>2 删除模块<br>    “选中要删除的模块右键”<del>“Remove Module”</del>“Remove” 注意这里只是移除，模块文件是还在的，要想彻底清除，就要找到路径下删除。<br>3 快捷打开模块目录路径<br>    “随便选中一个模块右键”<del>“Open in”</del>“Explorer”<br>4 导入模块<br>    “File”<del>“Project Structure”</del>“Modules”<del>“+”</del>“Import Module”<del>“选择你要导入的模块”</del>“OK”<del>“Next”</del>“Next”<del>“Next”</del>“Finish”~”OK”</p><h3 id="java-1"><a href="#java-1" class="headerlink" title="java"></a>java</h3><h4 id="一-注释"><a href="#一-注释" class="headerlink" title="一.注释"></a>一.注释</h4><p>1.单行注释：//注释信息<br>2.多行注释：/<em>注释信息</em>/<br>3.文档注释：/*<em>注释信息</em>/</p><h4 id="二-关键字"><a href="#二-关键字" class="headerlink" title="二.关键字"></a>二.关键字</h4><p>1.关键字的字母全部小写<br>2.常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观</p><h4 id="三-常量"><a href="#三-常量" class="headerlink" title="三.常量"></a>三.常量</h4><p>常量定义：在程序运行过程中，其值不可以发生改变的量<br>常量分类：<br>    1.字符串常量 说明(用双引号括起来的内容) 举例(“HelloWorld”,”黑马程序员”)<br>    2.整数常量   说明(不带小数的数字)       举例(666,-88)<br>    3.小数常量   说明(带小数的数字)         举例(13.14,-5.21)<br>    4.字符常量   说明(用单引号括起来的内容) 举例(‘A’,’0’,’我’)<br>    5.布尔常量   说明(布尔值，表示真假)     举例(只有两个值：true,false)<br>    6.空常量     说明(一个特殊的值，空值)   举例(值是：null)</p><h4 id="四-数据类型"><a href="#四-数据类型" class="headerlink" title="四.数据类型"></a>四.数据类型</h4><p>1.计算机存储单元，计算机存储设备的最小信息单元叫”位(bit)”，称之为”比特位”，通常用小写字母”b”表示<br>                计算机中最小的存储存储单元叫”字节(byte)”,用大写字母”B”表示，字节是由连续的8个位组成<br>    除了字节外还有一些常用的存储单位<br>    1B(字节) = 8bit<br>    1KB = 1024B<br>    1MB = 1024KB<br>    1GB = 1024MB<br>    1TB = 1024GB<br>2.数据类型内存占用和取值范围<br>    (1)整数4个关键字分别为<br>        byte    内存(1) 取值范围(-128<del>127)<br>        short   内存(2) 取值范围(-32768</del>32767)<br>        int     内存(4) 取值范围(-2的31次方到2的31次方-1)<br>        long    内存(8) 取值范围(-2的63次方到2的63次方-1)<br>    (2)浮点数2个关键字<br>        float   内存(4) 取值范围(负数：-3.402823E+38到-1.401298E-45 正数：1.101298E-45到3.402828E+38)<br>        double  内存(8) 取值范围(负数：-1.797693E+308到-4.9000000E-324 正数：4.9000000E-324到1.797693E+308)<br>    (3)字符1个关键字<br>        char    内存(2) 取值范围(0-65535)<br>    (4)布尔1个关键字<br>        boolean 内存(1) 取值范围(true,false)<br>    (说明：E+38表示是乘以10的38次方，同样，E-45表示乘以10的负45次方)<br>    (细节：如果给一个整数默认的是int类型的，给一个浮点数默认的是double类型的)</p><h4 id="五-变量"><a href="#五-变量" class="headerlink" title="五.变量"></a>五.变量</h4><p>变量定义：<br>    格式：数据类型变量名 = 变量值;<br>    范例：int a = 10;<br>变量的使用：<br>    取值格式：变量名<br>    范例：a<br>    修改值格式：变量名 = 变量值;<br>    范例：a = 20;<br>注意事项：<br>    (1)变量名不能重复<br>        范例：<br>            int a = 10;<br>            int a = 20;<br>    (2)变量未赋值，不能使用<br>        范例：<br>            int a;<br>    (3)long类型的变量定义时，为了防止整数过大，后面需要L/l<br>        范例：<br>            long b = 10000000000l;<br>            System.out.println(b);<br>    (4)float类型的变量定义的时候，为了防止类型不兼容，后面需要加F/f<br>        范例：<br>            float c = 13.14F;<br>            System.out.println(c);</p><h4 id="六-标识符"><a href="#六-标识符" class="headerlink" title="六.标识符"></a>六.标识符</h4><p>标识符概述：就是给类，方法，变量等起名的符号<br>1.标识符定义规则<br>    (1)由数字、字母、下划线(_)、和美元符($)组成<br>    (2)不能以数字开头<br>    (3)不能是关键字<br>    (4)区分大小写<br>    判断：<br>        bj(符合)    b2(符合)    2b(不符合)<br>        class(不符合) _2b(符合)   #itheima(不符合)<br>        ak47(符合)  Class(符合) helloworld(符合)<br>        aaaaaa(符合但不规范不利于名字区分)<br>        aaaaaaa(符合但不规范不利于名字区分)<br>2.常见命名约定<br>    (1)小驼峰命名法：方法、变量<br>        * 约定1：标识符是一个单词的时候，首字母小写<br>        * 范例1：name<br>        * 约定2：标识符由多个字母单词组成的时候，第一个单词首字母小写，其他单词首字母大写<br>        * 范例1：firstName<br>    (2)大驼峰命名法：类<br>        * 约定1：标识符是一个单词的时候，首字大母<br>        * 范例1：Student<br>        * 约定2：标识符由多个字母单词组成的时候，每个单词的首字母大写<br>        * 范例2：GoodStudent</p><h4 id="七-类型转换"><a href="#七-类型转换" class="headerlink" title="七.类型转换"></a>七.类型转换</h4><p>1.自动类型转换：把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量<br>    范例1：double d = 10;<br>    数据范围从小到大：<br>        byte &lt; short &lt; int &lt; long &lt; float &lt; double<br>                char &lt; int &lt; long &lt; float &lt; double<br>2.强制类型转换：把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量<br>    * 格式：目标数据类型 变量名 = (目标数据类型)值或者变量<br>    * 范例1：int k = (int)88.88;</p><h4 id="八-算术运算符"><a href="#八-算术运算符" class="headerlink" title="八.算术运算符"></a>八.算术运算符</h4><p>1.运算符和表达式<br>    * 运算符：对常量或者变量进行操作的符号<br>    * 表达式：用运算符把常量或者变量连接起来符号java语法的式子就可以称为表达式<br>              不同运算符连接起来的表达式体现的是不同类型的表达式<br>    * 举例说明：<br>                int a = 10;<br>                int b = 20;<br>                int c = a + b;<br>                +；是运算符，并且是算术运算符<br>                a+b：是表达式，由于+是算术运算符，所以这个表达式叫算术表达式<br>2.算术运算符<br>    符号    作用    说明<br>    +       加<br>    -        减<br>    *        乘<br>    /        除<br>    %        取余    获取两个数据做除法的余数<br>    注意事项：<br>        /和%的区别：两个数据做除法，/取结果的商，%取结果的余数<br>        整数操作只能的到整数，要想得到小数，必须有浮点数参与运算<br>3.字符+的操作<br>    拿字符在计算机底层对应的数值来进行计算的<br>        ‘A’ == 65  A-Z是连续的<br>        ‘a’ == 97  a-z是连续的<br>        ‘0’ == 48  0-9是连续的<br>    算术表达式中包含多个基本数据类型的值的时候。整个算术表达式的类型会自动进行提升<br>    提升规则：<br>        * byte类型，short类型和char类型将被提升到int类型<br>        * 整个表达式的类型自动提升到表达式中最高等级操作同样的类型<br>            等级顺序：byte,short,char -&gt; int -&gt; long -&gt; float -&gt; double</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytlpython</title>
      <link href="/2021/07/25/ytlpython/"/>
      <url>/2021/07/25/ytlpython/</url>
      
        <content type="html"><![CDATA[<h2 id="uiautomator2工具做app自动化"><a href="#uiautomator2工具做app自动化" class="headerlink" title="uiautomator2工具做app自动化"></a>uiautomator2工具做app自动化</h2><h1 id="uiautomator2使用教程-https-www-jb51-net-article-205942-htm"><a href="#uiautomator2使用教程-https-www-jb51-net-article-205942-htm" class="headerlink" title="uiautomator2使用教程(https://www.jb51.net/article/205942.htm)"></a><a href="https://www.cnblogs.com/Appleli/p/11413229.html">uiautomator2使用教程</a>(<a href="https://www.jb51.net/article/205942.htm">https://www.jb51.net/article/205942.htm</a>)</h1><p>文章参考：<a href="https://vic.kim/2019/05/20/UIAutomator2%E7%9A%84%E4%BD%BF%E7%94%A8/">https://vic.kim/2019/05/20/UIAutomator2%E7%9A%84%E4%BD%BF%E7%94%A8/</a></p><p>一、要求</p><p>python 3.6+</p><p>android 4.4+</p><p>二、介绍</p><p>uiautomator2 是一个可以使用Python对Android设备进行UI自动化的库。其底层基于Google uiautomator，Google提供的uiautomator库可以获取屏幕上任意一个APP的任意一个控件属性，并对其进行任意操作。</p><p>三、地址</p><p>GitHub地址：<a href="https://github.com/openatx/uiautomator2">https://github.com/openatx/uiautomator2</a></p><p>or <a href="https://github.com/openatx/uiautomator2/blob/master/README.md">https://github.com/openatx/uiautomator2/blob/master/README.md</a></p><p>四、安装</p><p><strong>1、安装uiautomator2</strong></p><p>pip install –pre uiautomator2</p><p>pip install pillow</p><p><strong>2、初始化</strong></p><p>部署相关的守护进程。</p><p>电脑连接上一个手机或多个手机, 确保adb已经添加到环境变量中，执行下面的命令会自动安装本库所需要的设备端程序：uiautomator-server 、atx-agent、openstf/minicap、openstf/minitouch</p><p>python -m uiautomator2 init</p><p>安装完成，设备上会多一个uiautomator的应用。</p><p>配置手机设备参数：</p><p>有两种方法，一种是通过WIFI，另一种是通过USB数据线将手机链接电脑。</p><p>WiFi连接更方便一点，需要保持PC和手机使用的一个WIFI，查看手机连接WIFI的IP地址。</p><p><strong>3、测试</strong></p><p>import uiautomator2 as u2</p><p>d = u2.connect(‘127.0.0.1::6555’)</p><p>print(d.info) </p><p>打印结果：</p><p>{‘currentPackageName’: ‘com.android.launcher’, ‘displayHeight’: 1280, ‘displayRotation’: 1, ‘displaySizeDpX’: 360, ‘displaySizeDpY’: 640, ‘displayWidth’: 720, ‘productName’: ‘DUK-AL20’, ‘screenOn’: True, ‘sdkInt’: 23, ‘naturalOrientation’: False}</p><p>五、元素定位</p><h2 id="1、查看app控件"><a href="#1、查看app控件" class="headerlink" title="1、查看app控件"></a><strong>1、查看app控件</strong></h2><p>（1）、安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pip install --pre --upgrade weditor</span><br><span class="line">（2）、使用</span><br><span class="line">python -m weditor</span><br><span class="line">（3）、工具打开 </span><br><span class="line">默认会通过浏览器打开页面：http://atx.open.netease.com/</span><br><span class="line">（4）工具的操作步骤</span><br><span class="line">选择android、输入手机或者模拟器的ip+端口，点击connect</span><br><span class="line">dump hierarchy是用来刷新页面的</span><br><span class="line">鼠标点击想要的元素，就可以查看他们的控件了</span><br></pre></td></tr></table></figure><h2 id="2、主要语法"><a href="#2、主要语法" class="headerlink" title="2、主要语法"></a><strong>2、主要语法</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">（<span class="number">1</span>）启动app</span><br><span class="line">d.app_start(<span class="string">&quot;com.addcn.android.house591&quot;</span>)</span><br><span class="line">（<span class="number">2</span>）关闭app</span><br><span class="line">cls.d.app_stop(<span class="string">&quot;com.addcn.android.house591&quot;</span>)</span><br><span class="line">（<span class="number">3</span>）ResourceId定位</span><br><span class="line">cls.d(resourceId=<span class="string">&quot;com.addcn.android.house591:id/ad_banner&quot;</span>).click()</span><br><span class="line">（<span class="number">4</span>）Text定位</span><br><span class="line">d(text=<span class="string">&quot;精选&quot;</span>).click()</span><br><span class="line">（<span class="number">5</span>）Description定位</span><br><span class="line">d(description=<span class="string">&quot;..&quot;</span>).click()</span><br><span class="line">（<span class="number">6</span>）ClassName定位</span><br><span class="line">d(className=<span class="string">&quot;android.widget.TextView&quot;</span>).click()</span><br><span class="line">（<span class="number">7</span>）xpath定位</span><br><span class="line">d.xpath(<span class="string">&quot;//*[@content-desc=&#x27;分享&#x27;]&quot;</span>).click()</span><br></pre></td></tr></table></figure><h2 id="3、其他操作"><a href="#3、其他操作" class="headerlink" title="3、其他操作"></a>3、其他操作</h2><p>（1）#组默认元素等待超时（秒）<br>d.wait_timeout = 20.0  #默认20<br>（2）元素拖拽<br>（3）开关点击</p><ul><li><p><code>d(A).left(B), selects B on the left side of A.</code></p></li><li><p><code>d(A).right(B), selects B on the right side of A.</code></p></li><li><p><code>d(A).up(B), selects B above A.</code></p></li><li><p><code>d(A).down(B), selects B under A.</code></p></li><li><p>```<br>  例如：<br>  #选择“Wi-Fi”右侧的“开关”<br>  d(text=”Wi‑Fi”).right(className=”android.widget.Switch”).click()</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>（4）获取/统计某个相同条件的数目<br>d(text=”Add new”).count<br>或者<br>len(d(text=”Add new”))<br>得知数目之后，我们可以通过索引去定位<br>d(text=”Add new”)[0]<br>d(text=”Add new”)<br>也可以遍历<br>for view in d(text=”Add new”):<br>  view.info </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>（5）截图<br>＃截取屏幕截图并保存到计算机上的文件中，要求Android&gt; = 4.2。<br>d.screenshot（ “ home.jpg ”） # get PIL.Image格式化图像。当然，你需要首先安装pillow  image = d.screenshot（） # default format =“pillow”<br>image.save（ “ home.jpg ”）＃或home.png。目前，只有PNG和JPG支持＃得到OpenCV的格式图像。当然，你需要先安装numpy和cv2<br>import cv2<br>image = d.screenshot（ format = ‘ opencv’） cv2.imwrite（ ‘ home.jpg ‘图像）＃获取原始JPEG数据 imagebin = d.screenshot（格式= ‘原始’） 打开（ “ some.jpg ”， “ WB ”）.WRITE（imagebin）（6）手势操作<br>1、单击<br>d（ text = “ Settings ”）.click()<br>2、长按<br>d（ text = “ Settings ”）.long_click（）<br>3、将对象拖向另一个点或另一个UI对象<br>＃笔记：拖不能用于为Android &lt;4.3。<br>＃将UI对象拖动到屏幕点（x，y），0.5秒后<br>d（ text = “设置”）.drag_to（x，y， duration = 0.5）<br>＃将UI对象拖动到另一个（中心位置） UI对象，在0.25秒<br>d（ text = “设置”）.drag_to（ text = “ Clock ”， duration = 0.25）4、在屏幕上滑动</p><h1 id="swipe-from-sx-sy-to-ex-ey"><a href="#swipe-from-sx-sy-to-ex-ey" class="headerlink" title="swipe from (sx, sy) to (ex, ey)"></a>swipe from (sx, sy) to (ex, ey)</h1><p>d.swipe(sx, sy, ex, ey)</p><h1 id="swipe-from-sx-sy-to-ex-ey-with-10-steps"><a href="#swipe-from-sx-sy-to-ex-ey-with-10-steps" class="headerlink" title="swipe from (sx, sy) to (ex, ey) with 10 steps"></a>swipe from (sx, sy) to (ex, ey) with 10 steps</h1><p>d.swipe(sx, sy, ex, ey, steps=10)<br>5、在屏幕上拖拽</p><h1 id="drag-from-sx-sy-to-ex-ey"><a href="#drag-from-sx-sy-to-ex-ey" class="headerlink" title="drag from (sx, sy) to (ex, ey)"></a>drag from (sx, sy) to (ex, ey)</h1><p>d.drag(sx, sy, ex, ey)</p><h1 id="drag-from-sx-sy-to-ex-ey-with-10-steps"><a href="#drag-from-sx-sy-to-ex-ey-with-10-steps" class="headerlink" title="drag from (sx, sy) to (ex, ey) with 10 steps"></a>drag from (sx, sy) to (ex, ey) with 10 steps</h1><p>d.drag(sx, sy, ex, ey, steps=10)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">（7）获取对象信息和状态</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1、d(text=”Settings”).exists<br>＃如果存在则为True，否则为假<br>or d.exists(text=”Settings”) # 进一步使用 d(text=”Settings”).exists(timeout=3)<br># 等待设置出现在3S，相同.wait（3）<br>2、检索特定UI对象的信息<br>d(text=”Settings”).info<br>3、获取/设置/清除可编辑字段的文本（例如，EditText小部件）<br>d(text = “ Settings ”).get_text（）   # get widget text<br>d(text = “ Settings ”).set_text（“ My text … ”）   ＃设置文本<br>d(text = “ Settings ”).clear_text（ ）   ＃清除文字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">（8）系统常用按键</span><br><span class="line"></span><br><span class="line"># press home key</span><br><span class="line">d.press.home()</span><br><span class="line"></span><br><span class="line"># press back key</span><br><span class="line">d.press.back()</span><br><span class="line"></span><br><span class="line"># the normal way to press back key</span><br><span class="line">d.press(&quot;back&quot;)----亲测可用</span><br><span class="line"></span><br><span class="line"># press keycode 0x07(&#x27;0&#x27;) with META ALT(0x02) on</span><br><span class="line">d.press(0x07, 0x02)</span><br><span class="line">- `home          #手机Home键`</span><br><span class="line">- `back          #手机返回键`</span><br><span class="line">- `left          #对应键盘上的向右键&lt;-`</span><br><span class="line">- `right          #对应键盘上的向右键-&gt;`</span><br><span class="line">- `up           #对应键盘上的向上键`</span><br><span class="line">- `down          #对应键盘上的向下键`</span><br><span class="line">- `center          #选中？`</span><br><span class="line">- `menu          #菜单`</span><br><span class="line">- `search          #查找？`</span><br><span class="line">- `enter          #对应键盘上的Enter键`</span><br><span class="line">- `delete`(or `del`)              #对应键盘上的DEL键 用于删除</span><br><span class="line">- `recent`(recent apps)          #任务切换</span><br><span class="line">- `volume_up         #声音向上调整`</span><br><span class="line">- `volume_down        #声音向下调整`</span><br><span class="line">- `volume_mute        #静音按键`</span><br><span class="line">- `camera          #拍照`</span><br><span class="line">- `power          #电源键`</span><br><span class="line"></span><br><span class="line">六、断言</span><br><span class="line">try:</span><br><span class="line">d(判断条件).click()</span><br><span class="line">print(&quot;测试成功&quot;)</span><br><span class="line">except：</span><br><span class="line">print(&quot;测试失败&quot;)</span><br><span class="line"></span><br><span class="line">六、使用经验</span><br><span class="line">1、使用前初始化</span><br><span class="line">python -m uiautomator2 init</span><br><span class="line">2、打开工具</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">python -m weditor</span><br></pre></td></tr></table></figure></li></ul><h2 id="4、app操作"><a href="#4、app操作" class="headerlink" title="4、app操作"></a>4、app操作</h2><h4 id="添加提示"><a href="#添加提示" class="headerlink" title="添加提示"></a>添加提示</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.toast.show(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="安装app"><a href="#安装app" class="headerlink" title="安装app"></a>安装app</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&quot;地址&quot;</span></span><br><span class="line">d.app_install(url)</span><br></pre></td></tr></table></figure><h4 id="打开app"><a href="#打开app" class="headerlink" title="打开app"></a>打开app</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(d.app_current())  <span class="comment">#获取当前正在运行的app</span></span><br></pre></td></tr></table></figure><h4 id="卸载app"><a href="#卸载app" class="headerlink" title="卸载app"></a>卸载app</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.app_uninstall(包名)</span><br></pre></td></tr></table></figure><h4 id="等待程序运行"><a href="#等待程序运行" class="headerlink" title="等待程序运行"></a>等待程序运行</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">方法一：pid = d.app_wait(<span class="string">&#x27;#包名&#x27;</span>)   <span class="comment">#等待应用运行</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> pid:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;#包名&#x27;</span>+<span class="string">&#x27;没有运行&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;#包名pid是 %d&#x27;</span> % pid)</span><br><span class="line">方法二：d.app_wait(<span class="string">&#x27;#包名&#x27;</span>,front = <span class="literal">True</span>)  <span class="comment">#等待应用前台运行</span></span><br><span class="line">方法三：d.app_wait(<span class="string">&#x27;#包名&#x27;</span>,timeout = <span class="number">20.0</span>) <span class="comment">#最长等待时间20s</span></span><br></pre></td></tr></table></figure><h4 id="检查并维持设备端守护进程处于运行状态"><a href="#检查并维持设备端守护进程处于运行状态" class="headerlink" title="检查并维持设备端守护进程处于运行状态"></a>检查并维持设备端守护进程处于运行状态</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.healthcheck()</span><br></pre></td></tr></table></figure><h4 id="检测应用程序崩溃"><a href="#检测应用程序崩溃" class="headerlink" title="检测应用程序崩溃"></a>检测应用程序崩溃</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sess = d.session(<span class="string">&#x27;#包名&#x27;</span>)  <span class="comment">#启动某app</span></span><br><span class="line">sess.close() <span class="comment">#停止某app</span></span><br><span class="line">sess.restart() <span class="comment">#冷启动某app</span></span><br></pre></td></tr></table></figure><h4 id="app启动"><a href="#app启动" class="headerlink" title="app启动"></a>app启动</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d.app_start(<span class="string">&#x27;#包名&#x27;</span>)</span><br><span class="line">d.app_start(<span class="string">&#x27;包名&#x27;</span>,<span class="string">&#x27;活动名&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="关闭app"><a href="#关闭app" class="headerlink" title="关闭app"></a>关闭app</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.app_stop(<span class="string">&#x27;#包名&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="清除app数据"><a href="#清除app数据" class="headerlink" title="清除app数据"></a>清除app数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.app_clear(<span class="string">&#x27;#包名&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.screenshot(<span class="string">r&#x27;d:\xxx.png&#x27;</span>)  <span class="comment">#在D盘目录下创建一个xxx.png的截图</span></span><br></pre></td></tr></table></figure><h4 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.implicitly_wait(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h3 id="5、按键操作"><a href="#5、按键操作" class="headerlink" title="5、按键操作"></a>5、按键操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">d.screen_on()  <span class="comment">#屏幕点亮</span></span><br><span class="line">d.unlock()   <span class="comment">#解锁屏幕</span></span><br><span class="line">d.screen_off()  <span class="comment">#熄屏</span></span><br><span class="line">d.press(<span class="string">&quot;home&quot;</span>)  <span class="comment">#回到主界面</span></span><br><span class="line">d.press(<span class="string">&quot;back&quot;</span>) <span class="comment">#返回</span></span><br><span class="line">d.press(<span class="string">&quot;left&quot;</span>)  <span class="comment">#左滑屏</span></span><br><span class="line">d.press(<span class="string">&quot;right&quot;</span>)  <span class="comment">#右滑屏</span></span><br><span class="line">d.press(<span class="string">&quot;up&quot;</span>)<span class="comment">#上滑屏</span></span><br><span class="line">d.press(<span class="string">&quot;down&quot;</span>)  <span class="comment">#下滑屏</span></span><br><span class="line">d.press(<span class="string">&quot;search&quot;</span>) <span class="comment">#负一屏搜索</span></span><br><span class="line">d.press(<span class="string">&quot;enter&quot;</span>)  <span class="comment">#回车键</span></span><br><span class="line">d.press(<span class="string">&quot;delete&quot;</span>) <span class="comment">#清除app</span></span><br><span class="line">d.press(<span class="string">&quot;power&quot;</span>)  <span class="comment">#电源键</span></span><br><span class="line">d.info.get(<span class="string">&#x27;screenOn&#x27;</span>) <span class="comment">#获取当前屏幕状态</span></span><br></pre></td></tr></table></figure><h3 id="6、元素定位"><a href="#6、元素定位" class="headerlink" title="6、元素定位"></a>6、元素定位</h3><h5 id="python-m-weditor"><a href="#python-m-weditor" class="headerlink" title="python -m weditor"></a>python -m weditor</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">text  <span class="comment">#根据text文本进入  d(text = &#x27;柠檬班&#x27;).click()</span></span><br><span class="line">textContains  <span class="comment">#包含text文本(模糊定位)  d(textContains = &#x27;柠檬班&#x27;).click()</span></span><br><span class="line">className，classNameMatches</span><br><span class="line">description,</span><br><span class="line">descriptionContains,</span><br><span class="line">descriptionMatches,</span><br><span class="line">descriptionStartsWith</span><br><span class="line">checkable,checked,clickable,longClickable</span><br><span class="line">scrollable,enabled,focusable,focused,selected</span><br><span class="line">packageName,packageNameMatches</span><br><span class="line">resourceId,resourceIdMatches</span><br><span class="line">index,instance</span><br></pre></td></tr></table></figure><h3 id="7、页面相对位置元素定位"><a href="#7、页面相对位置元素定位" class="headerlink" title="7、页面相对位置元素定位"></a>7、页面相对位置元素定位</h3><p>left，左边的元素</p><p>right，右边的元素</p><p>up，上面的元素</p><p>down，下面的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my = d(resourceId = <span class="string">&#x27;#某个元素&#x27;</span>)</span><br><span class="line">my.left().click()   <span class="comment">#点击某个元素左边的那个元素</span></span><br></pre></td></tr></table></figure><h3 id="8、app操作"><a href="#8、app操作" class="headerlink" title="8、app操作"></a>8、app操作</h3><p>百分比定位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.click(<span class="comment">#百分比)</span></span><br></pre></td></tr></table></figure><h3 id="9、滑动操作"><a href="#9、滑动操作" class="headerlink" title="9、滑动操作"></a>9、滑动操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#原始版</span></span><br><span class="line">d.swipe(<span class="comment">#startx, starty, endx, endy)</span></span><br><span class="line">d.swipe(<span class="comment">#startx, starty, endx, endy，0.5)  #滑动0.5s</span></span><br><span class="line"><span class="comment">#扩展板</span></span><br><span class="line">d.swipe_ext(<span class="string">&#x27;left&#x27;</span>) <span class="comment">#手指左滑，4选1  ：left,right,up,down</span></span><br><span class="line">d.swipe_ext(<span class="string">&#x27;left&#x27;</span>,scale=<span class="number">0.9</span>) <span class="comment">#默认0.9，滑动距离为屏幕宽度的90%</span></span><br><span class="line">d.swipe_ext(<span class="string">&#x27;left&#x27;</span>box = (<span class="number">0</span> , <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>)) <span class="comment">#在（0， 0） _&gt; (100， 100)这个区域滑动</span></span><br><span class="line"><span class="comment">#先定位元素，再使用元素对象滑动</span></span><br><span class="line">e = d(text=<span class="string">&#x27;某一元素&#x27;</span>)</span><br><span class="line">e.swipe(<span class="string">&#x27;down&#x27;</span>,steps=<span class="number">100</span>)</span><br><span class="line"><span class="comment">#滑动点击</span></span><br><span class="line">d.swipe_points([(x0, y0),(x1,y1),(x3,y3)],<span class="number">0.2</span>))</span><br></pre></td></tr></table></figure><h4 id="10、拖拽"><a href="#10、拖拽" class="headerlink" title="10、拖拽"></a>10、拖拽</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d.drag(sx, sy, ex ,ey)  <span class="comment">#从某坐标拖到某坐标</span></span><br><span class="line">d.drag(sx, sy, ex ,ey， <span class="number">0.5</span>)  <span class="comment">#从某坐标拖到某坐标 滑动0.5s</span></span><br></pre></td></tr></table></figure><h4 id="11、触摸-amp-滑动-amp-抬起"><a href="#11、触摸-amp-滑动-amp-抬起" class="headerlink" title="11、触摸&amp;滑动&amp;抬起"></a>11、触摸&amp;滑动&amp;抬起</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d.touch.down(<span class="number">10</span>, <span class="number">10</span>) <span class="comment">#模拟按下</span></span><br><span class="line">time.sleep(<span class="number">.01</span>)  <span class="comment">#down和move之间有延迟，自己控制</span></span><br><span class="line">d.touch.move(<span class="number">15</span>,<span class="number">15</span>) <span class="comment">#模拟滑动</span></span><br><span class="line">d.touch.up()  <span class="comment">#模拟抬起</span></span><br></pre></td></tr></table></figure><h4 id="12、打开通知栏和快速设置"><a href="#12、打开通知栏和快速设置" class="headerlink" title="12、打开通知栏和快速设置"></a>12、打开通知栏和快速设置</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d.open_notification() <span class="comment">#打开通知栏</span></span><br><span class="line">d.open_quick_settings() <span class="comment">#打开快速设置</span></span><br></pre></td></tr></table></figure><h3 id="13、输入-amp-清空"><a href="#13、输入-amp-清空" class="headerlink" title="13、输入&amp;清空"></a>13、输入&amp;清空</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#输入</span></span><br><span class="line">send_keys(<span class="string">&quot;#需要输入的内容&quot;</span>)</span><br><span class="line"><span class="comment">#清空</span></span><br><span class="line">clear_text()</span><br></pre></td></tr></table></figure><h3 id="14、截图"><a href="#14、截图" class="headerlink" title="14、截图"></a>14、截图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#直接截图保存在路径</span></span><br><span class="line">d.screenshot(<span class="string">&quot;文件名.png&quot;</span>)</span><br><span class="line"><span class="comment">#指定截图保存路劲</span></span><br><span class="line">d.screenshot(<span class="string">r&#x27;d:\xxx.png&#x27;</span>)  <span class="comment">#在D盘目录下创建一个xxx.png的截图</span></span><br></pre></td></tr></table></figure><h3 id="15、元素等待"><a href="#15、元素等待" class="headerlink" title="15、元素等待"></a>15、元素等待</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置元素查找等待时间（默认20s）</span></span><br><span class="line">d.implicitly_wait(<span class="number">10.0</span>)</span><br><span class="line">d(text = <span class="string">&#x27;Settings&#x27;</span>).click()  <span class="comment">#如果这个text元素在10秒钟没有显示，将会报错</span></span><br><span class="line"><span class="comment">#智能等待</span></span><br><span class="line">d.time_timeout = <span class="number">30</span>  <span class="comment">#设置全局等待时间为30秒（更改默认时间）</span></span><br><span class="line">d.app_start(<span class="string">&quot;#包名&quot;</span>,wait = <span class="literal">True</span>)   <span class="comment">#超时默认20秒</span></span><br><span class="line"><span class="comment">#等待某一个页面加载完成</span></span><br><span class="line">d.wait_activity()</span><br><span class="line"><span class="comment">#等待某一个元素出现</span></span><br><span class="line">d().wait()</span><br><span class="line"><span class="comment">#等待某一个与元素消失</span></span><br><span class="line">d().wait_gone()</span><br><span class="line"><span class="comment">#等待元素是否存在</span></span><br><span class="line">d().exists()</span><br><span class="line"><span class="comment">#等待点击，设置隐式等待</span></span><br><span class="line">click,clear_text()</span><br><span class="line">.click(timeout = <span class="number">50</span>) <span class="comment">#设置单独点击时间</span></span><br><span class="line">d().set_text(timeout = <span class="number">50</span>)  <span class="comment">#设置输入文本</span></span><br><span class="line"><span class="comment">#判断一个元素是否存在</span></span><br><span class="line">eg:</span><br><span class="line">    login_btn = d(resourecId = <span class="string">&quot;#元素名&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> login_btn.exists():</span><br><span class="line">        <span class="comment">#执行</span></span><br><span class="line">       login_btn.click</span><br></pre></td></tr></table></figure><h3 id="16、断言（预期结果是否等于实际结果的过程）"><a href="#16、断言（预期结果是否等于实际结果的过程）" class="headerlink" title="16、断言（预期结果是否等于实际结果的过程）"></a>16、断言（预期结果是否等于实际结果的过程）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> d.toast.get_massage() == <span class="string">&quot;#某个字符串&quot;</span></span><br></pre></td></tr></table></figure><h3 id="17、pytest中mark标签使用"><a href="#17、pytest中mark标签使用" class="headerlink" title="17、pytest中mark标签使用"></a>17、pytest中mark标签使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在每个def用例上打上标签</span></span><br><span class="line">eg:</span><br><span class="line"><span class="meta">    @pytest.mark.</span><span class="comment">#标签名</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_login_empty</span>():</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:        </span><br><span class="line">pytest.main([<span class="string">&#x27;-m #标签名&#x27;</span>])     </span><br></pre></td></tr></table></figure><h4 id="18、一个非常有用的代码"><a href="#18、一个非常有用的代码" class="headerlink" title="18、一个非常有用的代码"></a>18、一个非常有用的代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> d.watch_context() <span class="keyword">as</span> ctx:</span><br><span class="line">    ctx.when(<span class="string">&quot;立即（下载|更新）&quot;</span>).when(<span class="string">&quot;取消&quot;</span>).click() <span class="comment">#当同是出现（立即安装或立即取消） 和取消 按钮的时候，点击取消</span></span><br><span class="line">    ctx.when(<span class="string">&quot;同意&quot;</span>).click()</span><br><span class="line">    ctx.when(<span class="string">&quot;确定&quot;</span>).click()</span><br><span class="line">    <span class="comment">#上面三行代码是立即执行的完的，不会有什么等待</span></span><br><span class="line">    ctx.wait_stable()  <span class="comment">#开启弹窗监控，并等待界面稳定（两个弹窗检查周期内没有弹窗代表稳定）</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#使用call函数来触发函数回调</span></span><br><span class="line">    <span class="comment">#call支持两个参数，d和el，不区分参数位置，可以不传参，如果传参变量名不能写错</span></span><br><span class="line">    <span class="comment">#e.g：当有元素匹配仲夏之夜，点击返回按钮</span></span><br><span class="line">    ctx.when(<span class="string">&#x27;仲夏之夜&#x27;</span>).call(<span class="keyword">lambda</span> d: d.press(<span class="string">&quot;back&quot;</span>))</span><br><span class="line">    ctx.when(<span class="string">&#x27;确定&#x27;</span>).call(<span class="keyword">lambda</span> el: el.click())</span><br><span class="line"></span><br><span class="line">    <span class="comment">#其他操作</span></span><br><span class="line"><span class="comment">#为了方便也可以使用代码中默认的弹窗监控逻辑</span></span><br><span class="line"><span class="comment">#下面是目前内置的默认逻辑</span></span><br><span class="line"><span class="keyword">with</span> d.watch_context(builtin = <span class="literal">True</span>) <span class="keyword">as</span> ctx:</span><br><span class="line">    <span class="comment">#在已有的基础上增加</span></span><br><span class="line">    ctx.when(<span class="string">&#x27;@tb:id/jview_view&#x27;</span>).when(<span class="string">&#x27;//*[@content-desc = &#x27;</span>图片<span class="string">&#x27;]&#x27;</span>).click()</span><br><span class="line">    </span><br><span class="line">另一种写法</span><br><span class="line">ctx = d.watch_context()</span><br><span class="line">    ctx.when(<span class="string">&#x27;设置&#x27;</span>).click()</span><br><span class="line">    ctx.wait_stable() <span class="comment">#等待界面不再有弹窗了</span></span><br><span class="line">    ctx.close()</span><br><span class="line"></span><br><span class="line">注册监控</span><br><span class="line"><span class="comment">#常用写法，注册匿名监控</span></span><br><span class="line">d.watcher.when(<span class="string">&#x27;安装&#x27;</span>).click()</span><br><span class="line"><span class="comment">#注册名为ANR的监控，当出现ANR和Force Close时，点击Force Close</span></span><br><span class="line">d.watcher(<span class="string">&#x27;ANR&#x27;</span>).when(xpath=<span class="string">&#x27;ANR&#x27;</span>).when(<span class="string">&#x27;Force Close&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment">#其他回调例子</span></span><br><span class="line">d.watch.when(<span class="string">&#x27;抢红包&#x27;</span>).press(<span class="string">&#x27;back&#x27;</span>)</span><br><span class="line">d.watch.when(<span class="string">&quot;//*[text = &#x27;Out of memory&#x27;]&quot;</span>).call(<span class="keyword">lambda</span> d: d.shell(<span class="string">&#x27;am force-stop com.im.qq&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#回调说明</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">click_callback</span>(<span class="params">d: u2.Device</span>):</span></span><br><span class="line">    d.xpath(<span class="string">&quot;确定&quot;</span>).click() <span class="comment">#在回调中调用不会再次出发watcher</span></span><br><span class="line">d.xpath(<span class="string">&quot;继续&quot;</span>).click()  <span class="comment">#使用d.xpath检查元素的时候，会出发watcher(目前最多出发5次)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#监控操作</span></span><br><span class="line"><span class="comment">#移除ANR的监控</span></span><br><span class="line">d.wathder.remove(<span class="string">&quot;ANR&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#移除所有的监控</span></span><br><span class="line">d.watcher.remove()</span><br><span class="line"></span><br><span class="line"><span class="comment">#开始后台监控</span></span><br><span class="line">d.watcher.start()</span><br><span class="line">d.watcher.start(<span class="number">2.0</span>)  <span class="comment">#默认监控间隔2.0秒</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#强制运行所有监控</span></span><br><span class="line">d.watcher.run()</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止监控</span></span><br><span class="line">d.watcher.stop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止并移除所有的监控，常用于初始化</span></span><br><span class="line">d.watcher.reset()</span><br></pre></td></tr></table></figure><h4 id="18、输入法"><a href="#18、输入法" class="headerlink" title="18、输入法"></a>18、输入法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">d.set_fastinput_ime(<span class="literal">True</span>) <span class="comment">#切换成FastInputIME输入法</span></span><br><span class="line">d.send_keys(<span class="string">&quot;你好123abcEFG&quot;</span>) <span class="comment">#adb广播输入</span></span><br><span class="line">d.clear_text() <span class="comment">#清楚输入框所有内容</span></span><br><span class="line">d.set_fastinput_ime(<span class="literal">False</span>)  <span class="comment">#切换成正常的输入法</span></span><br><span class="line">d.send_action(<span class="string">&#x27;search&#x27;</span>) <span class="comment">#模拟输入法的搜索</span></span><br></pre></td></tr></table></figure><h4 id="19、Toast"><a href="#19、Toast" class="headerlink" title="19、Toast"></a>19、Toast</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Show Toast</span></span><br><span class="line">d.toast.show(<span class="string">&#x27;Hello world&#x27;</span>)</span><br><span class="line">d.toast.show(<span class="string">&#x27;Hello world&#x27;</span>,<span class="number">1.0</span>)   <span class="comment">#显示为1.0秒，默认为1.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Get Toast</span></span><br><span class="line">d.toast.get_message(<span class="number">5.0</span>,<span class="number">10.0</span>,<span class="string">&quot;defult message&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#clear cached toast</span></span><br><span class="line">d.toast.reset()</span><br></pre></td></tr></table></figure><h4 id="20、视频录制"><a href="#20、视频录制" class="headerlink" title="20、视频录制"></a>20、视频录制</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一步：安装依赖包</span><br><span class="line">pip3 install -U <span class="string">&quot;uiautomator2[image]&quot;</span></span><br><span class="line">第二步：使用方法</span><br><span class="line">d.screenrecord(<span class="string">&#x27;output.mp4&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">10</span>)</span><br><span class="line">d.screenrecord.stop()  <span class="comment">#停止录制后，output.mp4 文件才能打开</span></span><br></pre></td></tr></table></figure><h4 id="21、图像适配"><a href="#21、图像适配" class="headerlink" title="21、图像适配"></a>21、图像适配</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第一步：安装依赖包</span><br><span class="line">pip3 install -U <span class="string">&quot;uiautomator2[image]&quot;</span></span><br><span class="line">第二步：使用方法</span><br><span class="line">imdata = <span class="string">&quot;target.png&quot;</span></span><br><span class="line">d.image.match(imdata)</span><br><span class="line"><span class="comment">#匹配待查找的图片，立刻返回一个结果</span></span><br><span class="line"><span class="comment">#返回一个dice，eg:&#123;&quot;similarity&quot;:0.9,&quot;point&quot;:[200,300]&#125;</span></span><br><span class="line">d.image.click(imdata, timeout=<span class="number">20.0</span>)  <span class="comment">#在20s的时间内调用match轮询查找图片，执行点击操作</span></span><br></pre></td></tr></table></figure><h4 id="22、停止UIAutomator"><a href="#22、停止UIAutomator" class="headerlink" title="22、停止UIAutomator"></a>22、停止UIAutomator</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.service(<span class="string">&quot;uiautomator&quot;</span>).stop()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytlmysql</title>
      <link href="/2021/07/25/ytlmysql/"/>
      <url>/2021/07/25/ytlmysql/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="ytlmysql"><a href="#ytlmysql" class="headerlink" title="ytlmysql"></a>ytlmysql</h2><h3 id="一-连接MySQL服务-MySQL数据库-的指令-查询电脑ip命令-ipconfig"><a href="#一-连接MySQL服务-MySQL数据库-的指令-查询电脑ip命令-ipconfig" class="headerlink" title="一.连接MySQL服务(MySQL数据库)的指令,查询电脑ip命令(ipconfig)"></a>一.连接MySQL服务(MySQL数据库)的指令,查询电脑ip命令(ipconfig)</h3><p>mysql - h 主机IP -P 端口 -u 用户名 -p密码<br>提醒:<br>(1)-p密码不要有空格,<br>(2)-p后面没有输入密码,回车会要求输入密码<br>(3)如果没有写-h 主机ip,默认就是主机<br>(4)如果没有写-p 端口,默认就是3306<br>(5)在实际工作中,3306一般会修改<br>(6)登入之前确保MySQL服务是启动状态 net start mysql 启动服务 net stop mysql 停止服务</p><h3 id="二-查看数据"><a href="#二-查看数据" class="headerlink" title="二.查看数据:"></a>二.查看数据:</h3><p>show databases<br>use mysql<br>show tables;<br>select * from user;  # 查询user表</p><h3 id="三-创建数据库"><a href="#三-创建数据库" class="headerlink" title="三.创建数据库:"></a>三.创建数据库:</h3><p>create database db02;  # 创建db02数据库<br>use db02<br>create table users (id int, name varchar(255), address varchar(255));  # 创建表格<br>insert into users values(1,’tom’,’bj’);  # 插入数据<br>insert into users values(2,’jack’,’sh’);  # 插入数据<br>insert into users values(3,’shunping’,’gz’);  # 插入数据<br>select * from users;  # 查询users表格数据<br>指令创建表,格式如下:注意(字体变蓝说明是个关键字,我们应该加个反引号``这个引起来)</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">CREATE TABLE <span class="token variable"><span class="token variable">`</span>表名<span class="token variable">`</span></span><span class="token punctuation">(</span>指定列名1 指定列类型<span class="token punctuation">(</span>字段类型<span class="token punctuation">)</span>,<span class="token function">id</span> int,<span class="token variable"><span class="token variable">`</span>password<span class="token variable">`</span></span> VARCHAR<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>,<span class="token variable"><span class="token variable">`</span>birthday<span class="token variable">`</span></span> DATE<span class="token punctuation">)</span>CHARACTER SET utf8 COLLATE utf8_bin ENGINE INNODB<span class="token punctuation">;</span>character set:字符集,如不指定测为所在数据库字符集,<span class="token punctuation">]</span>.collate:校对规则,如不指定则为所在数据库校对规则.engine:存储引擎,涉及内容较多.<span class="token function">id</span>        整形<span class="token punctuation">(</span>int<span class="token punctuation">)</span>name      字符串<span class="token punctuation">(</span>varchar<span class="token punctuation">(</span><span class="token number">225</span><span class="token punctuation">))</span>password  字符串<span class="token punctuation">(</span>varchar<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">))</span>birthday  日期<span class="token punctuation">(</span>date<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">CREATE TABLE <span class="token variable"><span class="token variable">`</span>user02<span class="token variable">`</span></span><span class="token punctuation">(</span><span class="token function">id</span> INT,<span class="token variable"><span class="token variable">`</span>name<span class="token variable">`</span></span> VARCHAR<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>,<span class="token variable"><span class="token variable">`</span>password<span class="token variable">`</span></span> VARCHAR<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>,<span class="token variable"><span class="token variable">`</span>birthday<span class="token variable">`</span></span> DATE<span class="token punctuation">)</span>CHARACTER SET utf8 COLLATE utf8_bin ENGINE INNODB<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四-备份恢复数据库或者表"><a href="#四-备份恢复数据库或者表" class="headerlink" title="四.备份恢复数据库或者表:"></a>四.备份恢复数据库或者表:</h3><p>(1)备份数据库(注意:在DOS执行,后面不带分号)<br>mysqldump -u 用户名 -p -B 数据库1 数据库2 数据库n &gt; d:\path文件名.sql<br>(2)备份库的表:(注意:备份表不要-B)<br>mysqldump -u 用户名 -p密码 数据库名 表名1 表名2 表名n &gt; d:\path文件名.sql<br>(3)恢复数据库(注意:进入mysql里面在执行,先创建新的数据库名,在在这个库名下面备份数据)<br>create database 新库名;<br>use 新库名;<br>Source d:\path文件名.sql</p><h3 id="五-删除数据库里面的表"><a href="#五-删除数据库里面的表" class="headerlink" title="五.删除数据库里面的表:"></a>五.删除数据库里面的表:</h3><p>drop table 表名:</p><h3 id="六-删除数据库-注意-进入mysql在执行-慎重使用"><a href="#六-删除数据库-注意-进入mysql在执行-慎重使用" class="headerlink" title="六.删除数据库(注意:进入mysql在执行,慎重使用.)"></a>六.删除数据库(注意:进入mysql在执行,慎重使用.)</h3><p>drop database 库名;</p><h3 id="七-数据库的增删改查"><a href="#七-数据库的增删改查" class="headerlink" title="七.数据库的增删改查"></a>七.数据库的增删改查</h3><h4 id="1-增"><a href="#1-增" class="headerlink" title="1.增"></a>1.增</h4><p>1、向所有列插入数据–into关键字可以省略<br>insert    into    表名  values（列值1，列值2，……）<br>insert    into  studentinfo  values（‘004’，‘张鑫’，19，‘北京海淀’）<br>2、向指定列插入数据–into关键字可以省略<br>，不提供值的列一定是可以为空的列（null），<br>列名的顺序可以与表结构中的顺序不同，只要列值的顺序与之对应就行<br>insert    studentinfo（姓名，学号）  values（‘王强’，‘006’）<br>insert  into  表名（列名1，列名2，……） values（列值1，列值2，……）<br>insert    into  studentinfo（学号，姓名）  values（‘005’，‘李清’<br>identity–相同：对于标识列，因为是自动增长的，所以不能指定值<br>default–系统设定值：具有缺省值的列，可以使用default关键字来替代插入的数据</p><h4 id="2-删"><a href="#2-删" class="headerlink" title="2.删"></a>2.删</h4><p>删除表中数据–from关键字可以省略，如果不指定where条件，将把表中所有记录都删除掉（很危险！），<br>如果使用where指定条件，则满足条件的记录被删除<br>不能只删除半行或某几列数据<br>delete-删除   from   Tab1<br>delete   book  where  bid=’s0000’<br>truncate-删除所有   table 表名–不能指定条件，只能删除所有数据，所以功能等价于“delate  表名”的语句<br>优点：速度更快，使用的系统资源和事务日志资源更少<br>缺点：不会将删除每一条记录的操作记录到日志中，所以一旦删除，则无法通过日志恢复删除的数据<br>drop-删除    database-数据库 表名–删除数据库名<br>drop table-表 表名–删除表结构</p><h4 id="3-改"><a href="#3-改" class="headerlink" title="3.改"></a>3.改</h4><p>update–更新 表名 set–日落 列名1=该列新值，列名2=该列新值，……where 条件<br>update 表名 set salary=salary+100–表述每行工资都加100<br>update book set pub=’新华出版社’   where    Bname=’娱乐天地‘–更新指定的记录<br>update book set author2=’江泽民’,numinput=100,numstore=100 where author1=’邓小平’–同时更新多个字段</p><h4 id="4-查"><a href="#4-查" class="headerlink" title="4.查"></a>4.查</h4><p>select * from 表名–查询所有记录<br>select 列名1，列名2，…… from 表名–查询指定的列，列的顺序可以与表结构的顺序不同，列之间使用逗号分隔<br>select Cid, address, Cname, Phone  from  customer</p><p>select 列名1 as 列别名1，列名2 as 列别名2，…… from 表名–重新为列指定列名，as关键字可以省略<br>select Bname as 书名,Author1 as 作者,Pub as 出版社 from book</p><p>select cid 学号,cname 姓名, address ,phone as 电话 from customer</p><p>select 列别名1=列名1，列别名2=列名2 ，…… from 表名–使用等于号重新为列指定列名<br>select 书名=bname,书号=bid,pub from book</p><p>select 列名1 +列名1 as 列别名，…… from 表名–可以把多列合并成一列显示</p><p>select 列别名=列名1 +列名1 ,…… from 表名<br>select 列名1 ，列名2 ，常量值 as 列名 from 表名–使用常量<br>select * from 表名 order by age asc–升序，salary desc–降序<br>select * from 表名 where address like ‘深圳%’</p><p>在mysql数据库中要查询前10条数据，不再使用top n语句，top n语句主要用在sqlserver数据库系统中，<br>在mysql中一般使用 select * from 表名 limit 0,10 order by 字段 desc,<br>如在学生表中查询年龄比较大的前10个学生，则这样写，<br>select * from 学生表 limit 0,10 order by 年龄 desc。（一般使用这个 在后面加 limit 0,10）<br>select top 5 * from customer （这个在sqlserver数据库中使用，在cmd使用无效）<br>select * from table_name limit 0,10 (0代表从第几行开始，10代表显示多少行)</p><p>select * from book where numstore between 20 and 30<br>select * from book where id in （’a0001’,’a0002’）<br>合函数方便进行数据统计<br>聚合函数不能在 where 中使用<br>常用聚合函数<br>count(): 查询总记录数 ：查询学生总数 select count(*) from students;<br>max(): 查询最大值 ：查询女生的最大年龄 select max(age) from students where sex=’女’;<br>min(): 查询最小值 ：查询1班的最小年龄 select min(age) from students;<br>sum(): 求和 ：查询北京学生的年龄总和 select sum(age) from students where hometown=’北京’;<br>avg(): 求平均值：查询女生的平均年龄 select avg(age) from students where sex=’女’ </p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytlmysql安装教程</title>
      <link href="/2021/07/24/ytlmysql-an-zhuang-jiao-cheng/"/>
      <url>/2021/07/24/ytlmysql-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="ytlmysql安装"><a href="#ytlmysql安装" class="headerlink" title="ytlmysql安装"></a>ytlmysql安装</h2><h3 id="一-下载MySQL"><a href="#一-下载MySQL" class="headerlink" title="一.下载MySQL"></a>一.下载MySQL</h3><p>1.点击<a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip">这里</a>下载mysql-5.7.19-winx64.zip压缩包<br>2.下载完之后解压到D:\ytlmysql\mysql-5.7.19-winx64目录下</p><h3 id="二-配置用户环境变量"><a href="#二-配置用户环境变量" class="headerlink" title="二.配置用户环境变量"></a>二.配置用户环境变量</h3><p>1.右击此电脑选择属性点击高级系统设置，点击高级最下面的环境变量<br>2.选择用户变量把路径配置到path：D:\ytlmysql\mysql-5.7.19-winx64\bin里面，之后点击确定关闭即可</p><h3 id="三-在本机配置MySQL"><a href="#三-在本机配置MySQL" class="headerlink" title="三.在本机配置MySQL"></a>三.在本机配置MySQL</h3><p>1.新建My.ini文件放到D:\ytlmysql\mysql-5.7.19-winx64\目录下<br>内容结构如下复制到My.ini文件里面就行</p><pre class="line-numbers language-buildoutcfg" data-language="buildoutcfg"><code class="language-buildoutcfg">[client]port=3306  # 端口default-character-set=utf8  # 编码格式[mysqld]# 设置为自己的安装目录basedir=D:\ytlmysql\mysql-5.7.19-winx64\# 设置为MySQL的数据目录,这个目录是系统创建datadir=D:\ytlmysql\mysql-5.7.19-winx64\data\port=3306character_set_server=utf8# 跳过安全检查# skip-grant-tables<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.以管理员的身份打开cmd,并切换到 cd /d D:\ytlmysql\mysql-5.7.19-winx64\bin\ 目录下,执行如下命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysqld -install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如是新装的win10系统执行这个命令会报错，需另外安装<a href="https://github.com/YtlGitHub/YtlMySQL/blob/main/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/%E5%AE%89%E8%A3%85mysql%E5%87%BA%E9%94%99%E6%97%B6%E5%AE%89%E8%A3%85%E5%90%8E%E7%BD%AE%E5%B8%A6dll/vcredist_x64.exe">vcredist_x64.exe</a>插件，在执行这个命令就成功了<br>3.初始化数据库</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysqld --initialize-insecure --user<span class="token operator">=</span>mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.启动数据库</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">net start mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5.停止数据库,这个先不关最后不用了在关</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">net stop mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="四-修改root密码"><a href="#四-修改root密码" class="headerlink" title="四.修改root密码"></a>四.修改root密码</h3><p>1.进入mysql管理终端:mysql -u root -p (当前root用户密码为空),不需要输入密码直接回车就可以进入mysql</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.修改root密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">use mysql<span class="token punctuation">;</span>update user <span class="token builtin class-name">set</span> <span class="token assign-left variable">authentication_string</span><span class="token operator">=</span>password<span class="token punctuation">(</span><span class="token string">"ytl"</span><span class="token punctuation">)</span>where <span class="token assign-left variable">user</span><span class="token operator">=</span><span class="token string">"root"</span> and <span class="token assign-left variable">Host</span><span class="token operator">=</span><span class="token string">"localhost"</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上面语句就行修改root用户的密码为ytl<br>注意在后面需要带’;’分号,回车执行指令<br>在执行flush privileges;刷新权限<br>最后退出quit,注意这里只是退出终端,但是MySQL服务是还在运行的.<br>3.回到D:\ytlmysql\mysql-5.7.19-winx64\目录下打开my.ini文件注销里面的# skip-grant-tables,注意修改完之后记得要重新启动才能生效.<br>4.注销后再执行net stop mysql停止MySQL,在执行net start mysql启动MySQL服务<br>5.安装完成</p><h3 id="五-进入本地mysql"><a href="#五-进入本地mysql" class="headerlink" title="五.进入本地mysql"></a>五.进入本地mysql</h3><p>现在重新进入MySQL,输入正确的用户和密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="六-修改权限让其他用户也可以连接你的mysql"><a href="#六-修改权限让其他用户也可以连接你的mysql" class="headerlink" title="六.修改权限让其他用户也可以连接你的mysql"></a>六.修改权限让其他用户也可以连接你的mysql</h3><h4 id="1-改表法"><a href="#1-改表法" class="headerlink" title="1.改表法"></a>1.改表法</h4><p>可能是你的帐号不允许从远程登陆，只能在localhost。这个时候只要在localhost的那台电脑，登入mysql后，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql -u root -pmysql<span class="token operator">&gt;</span>use mysql<span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span>update user <span class="token builtin class-name">set</span> <span class="token function">host</span> <span class="token operator">=</span> <span class="token string">'%'</span> where user <span class="token operator">=</span> <span class="token string">'root'</span><span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span>select host, user from user<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-授权法"><a href="#2-授权法" class="headerlink" title="2.授权法"></a>2.授权法</h4><p>(1)例如，你想用户’ytluser’使用密码’ytl’从任何主机连接到mysql服务器的话。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">GRANT ALL PRIVILEGES ON *.* TO <span class="token string">'ytluser'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'ytl'</span> WITH GRANT OPTION<span class="token punctuation">;</span>FLUSH PRIVILEGES<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>(2)如果你想允许用户ytluser从ip为10.127.56.177的主机连接到mysql服务器，并使用ytl作为密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">GRANT ALL PRIVILEGES ON *.* TO <span class="token string">'ytluser'</span>@<span class="token string">'10.127.56.177'</span> IDENTIFIED BY <span class="token string">'ytl'</span> WITH GRANT OPTION<span class="token punctuation">;</span>FLUSH PRIVILEGES<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>(3)如果你想允许用户ytluser从ip为192.168.1.6的主机连接到mysql服务器的db(库名)数据库，并使用ytl作为密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">GRANT ALL PRIVILEGES ON db.* TO <span class="token string">'ytluser'</span>@<span class="token string">'192.168.1.3'</span> IDENTIFIED BY <span class="token string">'ytl'</span> WITH GRANT OPTION<span class="token punctuation">;</span>FLUSH PRIVILEGES<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署个人博客</title>
      <link href="/2021/07/22/blog/"/>
      <url>/2021/07/22/blog/</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎来到部署个人博客ytlBlog"><a href="#欢迎来到部署个人博客ytlBlog" class="headerlink" title="欢迎来到部署个人博客ytlBlog!"></a>欢迎来到部署个人博客<a href="https://ytlgithub.github.io/">ytlBlog</a>!</h1><h2 id="部署个人博客"><a href="#部署个人博客" class="headerlink" title="部署个人博客"></a>部署个人博客</h2><h3 id="一-安装环境"><a href="#一-安装环境" class="headerlink" title="一.安装环境"></a>一.安装环境</h3><p>1.安装<a href="https://git-scm.com/">Git</a><br>2.安装<a href="https://nodejs.org/en/">node.js</a><br>3.当然你要有一个<a href="https://github.com/">github</a>账号，没有的话赶快去注册一个吧</p><h3 id="二-配置Github"><a href="#二-配置Github" class="headerlink" title="二.配置Github"></a>二.配置Github</h3><p>1.建立Repository,建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】<br>2.配置SSH-Key<br>3.创建密钥方法<br>创建密钥：在你的博客目录下右键弹框点击Git Bash Here 打开Git命令仓库输入如下命令<br>创建密钥命令：ssh-keygen -t rsa -C “<a href="mailto:1766842398@qq.com">1766842398@qq.com</a>“  注释：这里的邮箱输入你自己的<br>查看创建的密钥命令：cat ~/.ssh/id_rsa.pub  注释：复制这些密钥到GitHub ssh里面 头像点击设置里面添加ssh<br>会产生两个密钥一个id_esa 是私钥一个id_rsa.pub 是公钥</p><h3 id="三-安装Hexo"><a href="#三-安装Hexo" class="headerlink" title="三.安装Hexo"></a>三.安装Hexo</h3><p>1.打开Git命令行，执行如下命令<br>$ npm install -g hexo</p><h3 id="四-开始部署前提条件"><a href="#四-开始部署前提条件" class="headerlink" title="四.开始部署前提条件"></a>四.开始部署前提条件</h3><p>1.在电脑中建立一个名字叫「Hexo」的文件夹（比如我建在了D:\Hexo），然后在此文件夹中右键打开Git Bash。执行下面的命令<br>$ hexo init<br>Hexo随后会自动在目标文件夹建立网站所需要的文件<br>2.然后（在 /D/Hexo下）执行npm install<br>$ npm install<br>会在D:\Hexo目录中安装 node_modules</p><h3 id="五-生成博客"><a href="#五-生成博客" class="headerlink" title="五.生成博客"></a>五.生成博客</h3><p>1.启动在浏览器访问<a href="http://localhost:4000/">http://localhost:4000/</a> # 这时可以看到Hexo已为你生成了一篇blog<br>$ hexo server<br>可以简化<br>$ hexo s  生成本地浏览静态码<br>按Ctrl+C 停止Server<br>2.新建一个文章<br>$ hexo new “文章名”<br>刷新本地网页<a href="http://localhost:4000/">http://localhost:4000/</a> 可以发现已生成了一篇新文章 “文章名”<br>3.删除生成的public<br>$ hexo clean<br>4.生成静态网页<br>$ hexo generate<br>可以简化<br>$ hexo g<br>该命令执行完后，会在 D:\Hexo\public\ 目录下生成一系列html、css等文件<br>5.编辑文章<br>hexo new “文章名”会在D:\Hexo\source_posts目录下生成一个markdown文件：My-New-Post.md<br>可以使用一个支持markdown语法的编辑器（比如 Sublime Text 2）来编辑该文件。</p><h3 id="六-部署到Github"><a href="#六-部署到Github" class="headerlink" title="六.部署到Github"></a>六.部署到Github</h3><p>1.安装hexo-deployer-git插件，在站点目录下输入下面命令安装插件就好了，后在使用Hexo d命令就可以推送了<br>$ npm hexo-deployer-git<br>2.部署到Github前需要配置_config.yml文件，首先找到下面的内容<br>deploy:<br>    type:<br>然后将它们修改为<br>deploy:<br>    type: git<br>    repository: <a href="mailto:git@github.com">git@github.com</a>:YtlGitHub/YtlGitHub.github.io.git  注释：这个是输入你自己的SSH密钥地址<br>    branch: main  注释：main是你自己的分支<br>3.把代码文件推送到Github上<br>$ hexo deploy<br>4.测试<br>当部署完成后，在浏览器中打开<a href="https://ytlgithuborganization.github.io/YtlGitHub.github.io/">https://YtlGitHuborganization.github.io/YtlGitHub.github.io/</a> ，正常显示网页，表明部署成功。<br>本地静态网页：<a href="http://localhost:4000/">http://localhost:4000</a></p><h3 id="七-生成漂亮的主题"><a href="#七-生成漂亮的主题" class="headerlink" title="七.生成漂亮的主题"></a>七.生成漂亮的主题</h3><h4 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1.下载主题"></a>1.下载主题</h4><p>前言：我们知道它自己默认主题是非常难看的，所以我们就要下载一个漂亮的主题，网上有很多主题可以下载，这里我以<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>主题作为演示<br>(1).点击<a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a>下载最新稳定版代码的master分支。解压后，将hexo-theme-matery文件夹复制到你themes的Hexo博客项目文件夹中，并重命名为matery，名字自己可以随便定义与下面配置主题名字一致就行。<br>(2).当然，您可以使用git clone下载到您的themes文件夹中。<br>git clone <a href="https://github.com/blinkfox/hexo-theme-matery.git">https://github.com/blinkfox/hexo-theme-matery.git</a></p><h4 id="2-配置主题"><a href="#2-配置主题" class="headerlink" title="2.配置主题"></a>2.配置主题</h4><p>(1).修改你博客路径下_config.yml文件里面theme: 的值，后面的值修改为matery，注意matery就是上面主题自定义的名字</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2).修改主题显示自己的信息_config.yml博客路径里面的_config.yml，如果您是中国用户，建议将language的值改为zh-CN。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> YtlBlog<span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">'欢迎来到Ytl的博客'</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">'网站描述'</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> <span class="token string">'您网站的关键字,支持多个值'</span><span class="token key atrule">author</span><span class="token punctuation">:</span> Ytl<span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN  <span class="token comment"># en</span><span class="token key atrule">timezone</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(3).其他修改建议_config.yml博客路径里面的_config.yml<br>请修改的价值url的_config.yml，以你的网站的主URL(例如<a href="http://xxx.github.io/">http://xxx.github.io</a>)<br>我们建议修改这两个值per_page是的倍数6，如：12，18等等，以便可在每个屏幕下显示良好的职位列表。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">12</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(4).其他配置请参考<a href="https://github.com/YtlGitHub/ytlblog/tree/main/themes/matery">这里</a><br>你下载的主题下面的README_CN.md有详细介绍<br>hexo\themes\matery\README_CN.md</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC81MzYzNy8zMDExMA==">    <script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');    </script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 -->]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/19/hello-world/"/>
      <url>/2021/07/19/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="Welcome-to-Hexo-This-is-your-very-first-post-Check-documentation-for-more-info-If-you-get-any-problems-when-using-Hexo-you-can-find-the-answer-in-troubleshooting-or-you-can-ask-me-on-GitHub"><a href="#Welcome-to-Hexo-This-is-your-very-first-post-Check-documentation-for-more-info-If-you-get-any-problems-when-using-Hexo-you-can-find-the-answer-in-troubleshooting-or-you-can-ask-me-on-GitHub" class="headerlink" title="Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub."></a>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</h1><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
